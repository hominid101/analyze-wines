redWines <- read.csv("wineQualityReds.csv")
redWines <- subset(redWines, select = -c(X))
str(redWines)
library(ggplot2)
library(GGally)
library(scales)
library(memisc)
library(gridExtra)
qualityLevel = function(quality) {
level = as.numeric(cut(quality, breaks=c(0, 4, 5, 6, 10)))
level
return(level)
}
rpalette = 5
wpalette = 1
ptfont = 10           # font size of plot title
atfont = 9            # font size of axis title
ltfont = 8            # font size of legend title
ptfont = 10           # font size of plot title
atfont = 9            # font size of axis title
ltfont = 8            # font size of legend title
rqhist1 <- ggplot(data=redWines, aes(x=quality)) +
ggtitle("Red Wine Quality") +     # Plot title text
xlab("Wine Quality") + ylab("Count") +  # Axis label text
theme_bw() +                                          # Theme elements
theme(title=element_text(size=ptfont, face="bold"),   # Title font
axis.title=element_text(size=atfont, face="bold")) +
scale_x_continuous(limits=c(3,9), breaks = seq(3, 9, 1)) +
geom_histogram(binwidth = 1)
redWines$quality.label = cut(redWines$quality, breaks=c(0, 4, 5, 6, 10),
labels=c("poor", "average", "fine", "excellent"))
rqhist2 <- ggplot(data=redWines, aes(x=quality, fill=quality.label)) +
ggtitle("Red Wine Categories") +     # Plot title text
xlab("Wine Quality") + ylab("Count") +  # Axis label text
scale_fill_brewer(type = 'div', palette = rpalette, # Legend title/color
guide=guide_legend(reverse=TRUE, title="Quality Rating")) +
theme_bw() +                                          # Theme elements
theme(title=element_text(size=ptfont, face="bold"),   # Title font
axis.title=element_text(size=atfont, face="bold"),    # Axis font
legend.title=element_blank(),
legend.position=c(.9,.7)) +                       # Legend position
scale_x_continuous(limits=c(3,9)) +
geom_histogram(binwidth = 1)
grid.arrange(rqhist1, rqhist2, ncol=2)
redWines <- read.csv("wineQualityReds.csv")
redWines <- subset(redWines, select = -c(X))
str(redWines)
library(ggplot2)
library(GGally)
library(scales)
library(memisc)
library(gridExtra)
qualityLevel = function(quality) {
level = as.numeric(cut(quality, breaks=c(0, 4, 5, 6, 10)))
level
return(level)
}
rpalette = 5
wpalette = 1
ptfont = 10           # font size of plot title
atfont = 9            # font size of axis title
ltfont = 8            # font size of legend title
ptfont = 10           # font size of plot title
atfont = 9            # font size of axis title
ltfont = 8            # font size of legend title
rqhist1 <- ggplot(data=redWines, aes(x=quality)) +
ggtitle("Red Wine Quality") +     # Plot title text
xlab("Wine Quality") + ylab("Count") +  # Axis label text
theme_bw() +                                          # Theme elements
theme(title=element_text(size=ptfont, face="bold"),   # Title font
axis.title=element_text(size=atfont, face="bold")) +
scale_x_continuous(limits=c(3,9), breaks = seq(3, 9, 1)) +
geom_histogram(binwidth = 1)
redWines$quality.label = cut(redWines$quality, breaks=c(0, 4, 5, 6, 10),
labels=c("poor", "average", "fine", "excellent"))
rqhist2 <- ggplot(data=redWines, aes(x=quality, fill=quality.label)) +
ggtitle("Red Wine Categories") +     # Plot title text
xlab("Wine Quality") + ylab("Count") +  # Axis label text
scale_fill_brewer(type = 'div', palette = rpalette, # Legend title/color
guide=guide_legend(reverse=TRUE, title="Quality Rating")) +
theme_bw() +                                          # Theme elements
theme(title=element_text(size=ptfont, face="bold"),   # Title font
axis.title=element_text(size=atfont, face="bold"),    # Axis font
legend.title=element_blank(),
legend.position=c(.9,.7)) +                       # Legend position
scale_x_continuous(limits=c(3,9)) +
geom_histogram(binwidth = 1)
grid.arrange(rqhist1, rqhist2, ncol=2)
ggpairs(redWines,
params = list(color=I('red3'), shape = I('.'), corSize=8, outlier.shape = I('.')),
title = "Red Wines Scatter Plot Matrix")
ggpairs(redWines,
params = list(color=I('red'), shape = I('.'), corSize=8, outlier.shape = I('.')),
title = "Red Wines Scatter Plot Matrix")
